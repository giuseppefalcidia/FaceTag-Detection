{"ast":null,"code":"var _jsxFileName = \"/Users/giuseppefalcidia/Desktop/face-detection/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef } from 'react';\nimport * as faceapi from \"face-api.js\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const imgRef = useRef();\n  const canvasRef = useRef();\n\n  const handleImage = async () => {\n    const detections = await faceapi.detectAllFaces(imgRef.current, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceExpressions();\n    console.log(detections);\n  };\n\n  useEffect(() => {\n    const loadModels = () => {\n      Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\"), faceapi.nets.faceLandmark68Net.loadFromUri(\"/models\"), faceapi.nets.faceRecognitionNet.loadFromUri(\"/models\"), faceapi.nets.faceExpressionNet.loadFromUri(\"/models\")]).then(handleImage).catch(e => console.log(e));\n    };\n\n    imgRef.current && loadModels();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://images.pexels.com/photos/4262010/pexels-photo-4262010.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\n      ref: imgRef,\n      crossOrigin: \"anonymous\",\n      alt: \"\",\n      width: \"940\",\n      height: \"650\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: \"940\",\n      height: \"650\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"b93XHdRupPYPAq04ud0vy1vkBGY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/giuseppefalcidia/Desktop/face-detection/src/App.jsx"],"names":["useEffect","useRef","faceapi","App","imgRef","canvasRef","handleImage","detections","detectAllFaces","current","TinyFaceDetectorOptions","withFaceLandmarks","withFaceExpressions","console","log","loadModels","Promise","all","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","faceExpressionNet","then","catch","e"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,OAAO,KAAKC,OAAZ,MAAyB,aAAzB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,MAAM,GAAGH,MAAM,EAArB;AACA,QAAMI,SAAS,GAAGJ,MAAM,EAAxB;;AAEA,QAAMK,WAAW,GAAG,YAAY;AAC9B,UAAMC,UAAU,GAAG,MAAML,OAAO,CAACM,cAAR,CAAuBJ,MAAM,CAACK,OAA9B,EACvB,IAAIP,OAAO,CAACQ,uBAAZ,EADuB,EAEtBC,iBAFsB,GAGtBC,mBAHsB,EAAzB;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;AACD,GAPD;;AASAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,UAAU,GAAG,MAAM;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,CACVf,OAAO,CAACgB,IAAR,CAAaC,gBAAb,CAA8BC,WAA9B,CAA0C,SAA1C,CADU,EAEVlB,OAAO,CAACgB,IAAR,CAAaG,iBAAb,CAA+BD,WAA/B,CAA2C,SAA3C,CAFU,EAGVlB,OAAO,CAACgB,IAAR,CAAaI,kBAAb,CAAgCF,WAAhC,CAA4C,SAA5C,CAHU,EAIVlB,OAAO,CAACgB,IAAR,CAAaK,iBAAb,CAA+BH,WAA/B,CAA2C,SAA3C,CAJU,CAAZ,EAKGI,IALH,CAKQlB,WALR,EAMGmB,KANH,CAMSC,CAAC,IAAIb,OAAO,CAACC,GAAR,CAAYY,CAAZ,CANd;AAOD,KARD;;AASAtB,IAAAA,MAAM,CAACK,OAAP,IAAkBM,UAAU,EAA5B;AACD,GAXQ,EAWN,EAXM,CAAT;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,GAAG,EAAC,gHAAT;AACE,MAAA,GAAG,EAAEX,MADP;AAEE,MAAA,WAAW,EAAC,WAFd;AAGE,MAAA,GAAG,EAAC,EAHN;AAIE,MAAA,KAAK,EAAC,KAJR;AAKE,MAAA,MAAM,EAAC;AALT;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AACE,MAAA,GAAG,EAAEC,SADP;AAEE,MAAA,KAAK,EAAC,KAFR;AAGE,MAAA,MAAM,EAAC;AAHT;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAzCQF,G;;KAAAA,G;AA2CT,eAAeA,GAAf","sourcesContent":["import { useEffect, useRef } from 'react';\nimport * as faceapi from \"face-api.js\"\nimport './App.css';\n\nfunction App() {\n  const imgRef = useRef()\n  const canvasRef = useRef()\n\n  const handleImage = async () => {\n    const detections = await faceapi.detectAllFaces(imgRef.current,\n      new faceapi.TinyFaceDetectorOptions())\n      .withFaceLandmarks()\n      .withFaceExpressions();\n\n    console.log(detections);\n  }\n\n  useEffect(() => {\n    const loadModels = () => {\n      Promise.all([\n        faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\"),\n        faceapi.nets.faceLandmark68Net.loadFromUri(\"/models\"),\n        faceapi.nets.faceRecognitionNet.loadFromUri(\"/models\"),\n        faceapi.nets.faceExpressionNet.loadFromUri(\"/models\"),\n      ]).then(handleImage)\n        .catch(e => console.log(e));\n    }\n    imgRef.current && loadModels();\n  }, []);\n  return (\n    <div className=\"App\">\n      <img src=\"https://images.pexels.com/photos/4262010/pexels-photo-4262010.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\n        ref={imgRef}\n        crossOrigin=\"anonymous\"\n        alt=\"\"\n        width=\"940\"\n        height=\"650\"\n      />\n      <canvas\n        ref={canvasRef}\n        width=\"940\"\n        height=\"650\" />\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}