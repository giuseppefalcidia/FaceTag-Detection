{"ast":null,"code":"var _jsxFileName = \"/Users/giuseppefalcidia/Desktop/face-tag-detection/src/components/NewPost.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\"; // dependency \n\nimport * as faceapi from \"face-api.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewPost = _ref => {\n  _s();\n\n  let {\n    image\n  } = _ref;\n  const {\n    url,\n    width,\n    height\n  } = image;\n  const [faces, setFaces] = useState([]);\n  const [friends, setFriends] = useState([]); // accessing dom elements\n\n  const imgRef = useRef();\n  const canvasRef = useRef();\n\n  const handleImage = async () => {\n    const detections = await faceapi.detectAllFaces(imgRef.current, new faceapi.TinyFaceDetectorOptions());\n    setFaces(detections.map(d => Object.values(d.box)));\n  };\n\n  const enter = () => {\n    const ctx = canvasRef.current.getContext(\"2d\");\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = \"yellow\";\n    faces.map(face => ctx.strokeRect(...face));\n  };\n\n  useEffect(() => {\n    const loadModels = () => {\n      Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\"), faceapi.nets.faceLandmark68Net.loadFromUri(\"/models\"), faceapi.nets.faceExpressionNet.loadFromUri(\"/models\")]).then(handleImage).catch(e => console.log(e));\n    };\n\n    imgRef.current && loadModels();\n  }, []);\n\n  const addFriend = e => {\n    setFriends(prev => ({ ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  console.log(friends);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left\",\n      style: {\n        width,\n        height\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        ref: imgRef,\n        crossOrigin: \"anonymous\",\n        src: url,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        onMouseEnter: enter,\n        ref: canvasRef,\n        width: width,\n        height: height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), faces.map((face, i) => /*#__PURE__*/_jsxDEV(\"input\", {\n        name: `input${i}`,\n        style: {\n          left: face[0],\n          top: face[1] + face[3] + 5\n        },\n        placeholder: \"Tag a friend\",\n        className: \"friendInput\",\n        onChange: addFriend\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Share your post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"What's on your mind?\",\n        className: \"rightInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), friends && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"friends\",\n        children: [\"with \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"name\",\n          children: Object.values(friends) + \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"rightButton\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewPost, \"XJXgLrAMYHGjYz6dXcHJ2ibTOzE=\");\n\n_c = NewPost;\nexport default NewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"sources":["/Users/giuseppefalcidia/Desktop/face-tag-detection/src/components/NewPost.jsx"],"names":["useEffect","useRef","useState","faceapi","NewPost","image","url","width","height","faces","setFaces","friends","setFriends","imgRef","canvasRef","handleImage","detections","detectAllFaces","current","TinyFaceDetectorOptions","map","d","Object","values","box","enter","ctx","getContext","lineWidth","strokeStyle","face","strokeRect","loadModels","Promise","all","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceExpressionNet","then","catch","e","console","log","addFriend","prev","target","name","value","i","left","top"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n// dependency \nimport * as faceapi from \"face-api.js\";\n\nconst NewPost = ({ image }) => {\n    const { url, width, height } = image;\n    const [faces, setFaces] = useState([]);\n    const [friends, setFriends] = useState([]);\n\n    // accessing dom elements\n    const imgRef = useRef();\n    const canvasRef = useRef();\n\n    const handleImage = async () => {\n        const detections = await faceapi.detectAllFaces(\n            imgRef.current,\n            new faceapi.TinyFaceDetectorOptions()\n        );\n        setFaces(detections.map((d) => Object.values(d.box)));\n    };\n\n    const enter = () => {\n        const ctx = canvasRef.current.getContext(\"2d\");\n        ctx.lineWidth = 5;\n        ctx.strokeStyle = \"yellow\";\n        faces.map((face) => ctx.strokeRect(...face));\n    };\n\n    useEffect(() => {\n        const loadModels = () => {\n            Promise.all([\n                faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\"),\n                faceapi.nets.faceLandmark68Net.loadFromUri(\"/models\"),\n                faceapi.nets.faceExpressionNet.loadFromUri(\"/models\"),\n            ])\n                .then(handleImage)\n                .catch((e) => console.log(e));\n        };\n\n        imgRef.current && loadModels();\n    }, []);\n\n    const addFriend = (e) => {\n        setFriends((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n    };\n\n    console.log(friends);\n    return (\n        <div className=\"container\">\n            <div className=\"left\" style={{ width, height }}>\n                <img ref={imgRef} crossOrigin=\"anonymous\" src={url} alt=\"\" />\n                <canvas\n                    onMouseEnter={enter}\n                    ref={canvasRef}\n                    width={width}\n                    height={height}\n                />\n                {faces.map((face, i) => (\n                    <input\n                        name={`input${i}`}\n                        style={{ left: face[0], top: face[1] + face[3] + 5 }}\n                        placeholder=\"Tag a friend\"\n                        key={i}\n                        className=\"friendInput\"\n                        onChange={addFriend}\n                    />\n                ))}\n            </div>\n            <div className=\"right\">\n                <h1>Share your post</h1>\n                <input\n                    type=\"text\"\n                    placeholder=\"What's on your mind?\"\n                    className=\"rightInput\"\n                />\n                {friends && (\n                    <span className=\"friends\">\n                        with <span className=\"name\">{Object.values(friends) + \" \"}</span>\n                    </span>\n                )}\n                <button className=\"rightButton\">Send</button>\n            </div>\n        </div>\n    );\n};\n\nexport default NewPost;"]},"metadata":{},"sourceType":"module"}